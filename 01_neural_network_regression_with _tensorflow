{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNgGRyXdZYiIjztCJ51a9Vr"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# Introduction to Regression with Neural Networks in TensorFlow\n","\n","Thre are many definitions for a regression problem.  In our case we are\n","predicting a numerical variable based on some other combination of\n","variables, even shorter...predicting a number"],"metadata":{"id":"zbOW3W35XAVb"}},{"cell_type":"code","source":["# Import TensorFlow\n","import tensorflow as tf\n","\n","# Check its version\n","print(tf.__version__)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QcpPZRAsYc8H","executionInfo":{"status":"ok","timestamp":1761703155919,"user_tz":300,"elapsed":5034,"user":{"displayName":"Kiet Duong","userId":"01618440595764512710"}},"outputId":"8008b8d8-b0c2-47c5-e7fb-907a51ac24dc"},"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["2.19.0\n"]}]},{"cell_type":"code","source":["## Creating some data to view and fit\n","import numpy as np\n","import matplotlib.pyplot as plt\n","\n","# Create features\n","X = np.array([-7.0, -4.0, -1.0, 2.0, 5.0, 8.0, 11.0, 14.0])\n","\n","# Create labels\n","y = np.array([3.0, 6.0, 9.0, 12.0, 15.0, 18.0, 21.0, 24.0])\n","\n","# Visualize it\n","plt.scatter(X, y)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":435},"id":"3GxFJX2DYhcC","executionInfo":{"status":"ok","timestamp":1761703156124,"user_tz":300,"elapsed":206,"user":{"displayName":"Kiet Duong","userId":"01618440595764512710"}},"outputId":"bf53b45d-c506-40d7-f427-f8b6b4c2984d"},"execution_count":2,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["y == X + 10"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-e_dxTcbZLxh","executionInfo":{"status":"ok","timestamp":1761703156145,"user_tz":300,"elapsed":20,"user":{"displayName":"Kiet Duong","userId":"01618440595764512710"}},"outputId":"61466071-1803-486c-e76d-dfae88d1c1a7"},"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([ True,  True,  True,  True,  True,  True,  True,  True])"]},"metadata":{},"execution_count":3}]},{"cell_type":"markdown","source":["# Input and output shape"],"metadata":{"id":"5nJjKe4hZQVh"}},{"cell_type":"code","source":["# Create a demon tensor for our housing price prediction problem\n","house_info = tf.constant([\"bedroom\", \"bathroom\", \"garage\"]) # input feature, independent variable\n","house_price = tf.constant([939700]) # output labels , dependent variable\n","house_info, house_price"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"CAJ1MXllZpVO","executionInfo":{"status":"ok","timestamp":1761703156211,"user_tz":300,"elapsed":58,"user":{"displayName":"Kiet Duong","userId":"01618440595764512710"}},"outputId":"03d2e08d-3252-4aad-88a3-614046478a5b"},"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(<tf.Tensor: shape=(3,), dtype=string, numpy=array([b'bedroom', b'bathroom', b'garage'], dtype=object)>,\n"," <tf.Tensor: shape=(1,), dtype=int32, numpy=array([939700], dtype=int32)>)"]},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["X[0], y[0]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nbNoVMF-bE_e","executionInfo":{"status":"ok","timestamp":1761703156231,"user_tz":300,"elapsed":15,"user":{"displayName":"Kiet Duong","userId":"01618440595764512710"}},"outputId":"9d66bc26-5192-4e7a-e00f-60cf89d983c5"},"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(np.float64(-7.0), np.float64(3.0))"]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["X[1], y[1]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5C7TSg9ZbNnD","executionInfo":{"status":"ok","timestamp":1761703156259,"user_tz":300,"elapsed":27,"user":{"displayName":"Kiet Duong","userId":"01618440595764512710"}},"outputId":"76a50695-ec0b-49f5-9eae-b9da91f37002"},"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(np.float64(-4.0), np.float64(6.0))"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["input_shape = X.shape\n","output_shape = y.shape\n","input_shape, output_shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FLfn9Wxbaka1","executionInfo":{"status":"ok","timestamp":1761703156259,"user_tz":300,"elapsed":3,"user":{"displayName":"Kiet Duong","userId":"01618440595764512710"}},"outputId":"1be7bee4-5ff0-4bf4-f9b4-a228b616b436"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["((8,), (8,))"]},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["input_shape = X[0].shape\n","output_shape = y[0].shape\n","input_shape, output_shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XrLzqJV1bVAu","executionInfo":{"status":"ok","timestamp":1761703156295,"user_tz":300,"elapsed":37,"user":{"displayName":"Kiet Duong","userId":"01618440595764512710"}},"outputId":"83b63cfa-f26e-46b9-ad66-a9f5c2daf7a0"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["((), ())"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["X[0].ndim"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gYR29oMdbhPL","executionInfo":{"status":"ok","timestamp":1761703156307,"user_tz":300,"elapsed":9,"user":{"displayName":"Kiet Duong","userId":"01618440595764512710"}},"outputId":"96cb3412-b827-4a36-9e46-442a4804fb1b"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0"]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["X.ndim"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Js6c4PcGcH23","executionInfo":{"status":"ok","timestamp":1761703156308,"user_tz":300,"elapsed":3,"user":{"displayName":"Kiet Duong","userId":"01618440595764512710"}},"outputId":"e75cb814-3a44-4869-ef9a-9beb018b25c3"},"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1"]},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["tf.expand_dims(X , axis=-1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SlxRzk1hcMnV","executionInfo":{"status":"ok","timestamp":1761703156316,"user_tz":300,"elapsed":8,"user":{"displayName":"Kiet Duong","userId":"01618440595764512710"}},"outputId":"8c6e7a98-3a87-4699-8c59-98f1a9efb5a0"},"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<tf.Tensor: shape=(8, 1), dtype=float64, numpy=\n","array([[-7.],\n","       [-4.],\n","       [-1.],\n","       [ 2.],\n","       [ 5.],\n","       [ 8.],\n","       [11.],\n","       [14.]])>"]},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["# Turn our NumPy arrays into tensors\n","X = tf.constant(X)\n","y = tf.constant(y)\n","X.shape, y.shape\n","X, y"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vR_NUJEOq-KX","executionInfo":{"status":"ok","timestamp":1761703156341,"user_tz":300,"elapsed":24,"user":{"displayName":"Kiet Duong","userId":"01618440595764512710"}},"outputId":"121335ce-1a4b-480d-e462-f8074e214579"},"execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(<tf.Tensor: shape=(8,), dtype=float64, numpy=array([-7., -4., -1.,  2.,  5.,  8., 11., 14.])>,\n"," <tf.Tensor: shape=(8,), dtype=float64, numpy=array([ 3.,  6.,  9., 12., 15., 18., 21., 24.])>)"]},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["input_shape = X[0].shape\n","output_shape = y[0].shape\n","print(f\"Input shape: {input_shape}\")\n","print(f\"Output shape: {output_shape}\")\n","print(\"Scalers have no shape\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JjsdboBHrrwK","executionInfo":{"status":"ok","timestamp":1761703156371,"user_tz":300,"elapsed":29,"user":{"displayName":"Kiet Duong","userId":"01618440595764512710"}},"outputId":"aea07d4f-c1a4-4c01-b6cf-bf5981dd19b4"},"execution_count":13,"outputs":[{"output_type":"stream","name":"stdout","text":["Input shape: ()\n","Output shape: ()\n","Scalers have no shape\n"]}]},{"cell_type":"code","source":["plt.scatter(X, y)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":435},"id":"1GV4jeG-sAYX","executionInfo":{"status":"ok","timestamp":1761703156548,"user_tz":300,"elapsed":177,"user":{"displayName":"Kiet Duong","userId":"01618440595764512710"}},"outputId":"9aaac0bd-7a2b-4254-8596-0c6c43f0b6b2"},"execution_count":14,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["## Steps in modeling with TensorFlow\n","\n","1. Creating a model - define the input and output layers as well as the hidden layers of a deep learning model\n","2. Compiling the model - define the loss function (in other words, the function which tells our mode how wroing it is) and the optimizer (tells our model how to improve the patterns its learning) and evaluation metrics (what we can use to interpret the performance of our model)\n","3. Fitting a model - letting the model tyr ot find patterns between X and y (or features and labels)"],"metadata":{"id":"t44M2geCsG55"}},{"cell_type":"code","source":["# Set random seed\n","tf.random.set_seed(42)\n","\n","# 1. Create a model using the Sequential API\n","model = tf.keras.Sequential([\n","    tf.keras.layers.Dense(1)\n","])\n","\n","# 2. Compile model\n","model.compile(loss=tf.keras.losses.mae,\n","              optimizer=tf.keras.optimizers.SGD(), # sgd - stochastic gradient descent - how it should improve\n","              metrics=[\"mae\"])  # mae - mean absolute error\n","\n","# 3. Fit the model\n","model.fit(tf.expand_dims(X, axis=-1), y, epochs=10000, verbose=0)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"By1kHx6wsKuO","executionInfo":{"status":"ok","timestamp":1761703446411,"user_tz":300,"elapsed":189953,"user":{"displayName":"Kiet Duong","userId":"01618440595764512710"}},"outputId":"f46cfa42-871c-42d5-b4a7-dd613b2d5f67"},"execution_count":15,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<keras.src.callbacks.history.History at 0x7e3647f743b0>"]},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["# Check out X and y\n","X, y"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"q2iS8EUCxA2e","executionInfo":{"status":"ok","timestamp":1761703446424,"user_tz":300,"elapsed":0,"user":{"displayName":"Kiet Duong","userId":"01618440595764512710"}},"outputId":"b5610187-0368-4885-d8aa-1afb4b5424d5"},"execution_count":16,"outputs":[{"data":{"text/plain":["(<tf.Tensor: shape=(8,), dtype=float64, numpy=array([-7., -4., -1.,  2.,  5.,  8., 11., 14.])>,\n"," <tf.Tensor: shape=(8,), dtype=float64, numpy=array([ 3.,  6.,  9., 12., 15., 18., 21., 24.])>)"]},"execution_count":16,"metadata":{},"output_type":"execute_result"}]},{"cell_type":"code","source":["# Try to make a prediction using our model\n","model.predict(tf.constant([-7.0], shape=(1,1)))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZIn5J08FxGpz","executionInfo":{"status":"ok","timestamp":1761703446457,"user_tz":300,"elapsed":41,"user":{"displayName":"Kiet Duong","userId":"01618440595764512710"}},"outputId":"30cd5f0d-e6f6-46ff-ce0f-351456f860ed"},"execution_count":17,"outputs":[{"output_type":"stream","name":"stdout","text":["\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 36ms/step\n"]},{"output_type":"execute_result","data":{"text/plain":["array([[2.7985687]], dtype=float32)"]},"metadata":{},"execution_count":17}]},{"cell_type":"markdown","source":["## Improve Our Model\n","\n","We can improve our model by altering the steps we took to create the model\n","\n","1. **Creating a model** - we might add more layers, increase the number of hidden units (neurons) within each hidden layer, change the activation function of each layer.\n","\n","2. **Compiling the model** - we might change the optimization function or perhaps the learning rate of the the optimization function.\n","\n","3. **Fitting the model** - fit the model for more epochs or more training data"],"metadata":{"id":"a9cff1S6zU2n"}},{"cell_type":"code","source":["X_train = tf.constant([-7.0, -4.0, -1.0, 2.0, 5.0, 8.0, 11.0, 14.0], shape=(8,1))\n","y_train = tf.constant([3.0, 6.0, 9.0, 12.0, 15.0, 18.0, 21.0, 24.0], shape=(8,1))"],"metadata":{"id":"6Ddsi2Tf2lpg","executionInfo":{"status":"ok","timestamp":1761703446467,"user_tz":300,"elapsed":8,"user":{"displayName":"Kiet Duong","userId":"01618440595764512710"}}},"execution_count":18,"outputs":[]},{"cell_type":"code","source":["# Trying more hidden layers\n","\n","model1 = tf.keras.Sequential([\n","    tf.keras.layers.Dense(100, activation=\"relu\"),  # each one is a hidden layer, with 100 neurons\n","    tf.keras.layers.Dense(100, activation=\"relu\"),\n","    tf.keras.layers.Dense(1)\n","])\n","\n","model1.compile(loss=tf.keras.losses.mae,\n","              optimizer=tf.keras.optimizers.Adam(learning_rate=0.01),\n","              metrics=[\"mae\"])\n","\n","model_fit1 = model1.fit( X_train, y_train, epochs=100, verbose=0)"],"metadata":{"id":"bmp7o5m22KzX","executionInfo":{"status":"ok","timestamp":1761703450682,"user_tz":300,"elapsed":4132,"user":{"displayName":"Kiet Duong","userId":"01618440595764512710"}}},"execution_count":19,"outputs":[]},{"cell_type":"code","source":["model1.predict(tf.constant([17.0], shape=(1,1)))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8c_NpeKy3QPf","executionInfo":{"status":"ok","timestamp":1761703450733,"user_tz":300,"elapsed":48,"user":{"displayName":"Kiet Duong","userId":"01618440595764512710"}},"outputId":"72722f29-b22f-447b-9998-f5f211ef3060"},"execution_count":20,"outputs":[{"output_type":"stream","name":"stdout","text":["\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 49ms/step\n"]},{"output_type":"execute_result","data":{"text/plain":["array([[26.480703]], dtype=float32)"]},"metadata":{},"execution_count":20}]},{"cell_type":"markdown","source":["## Evaluating a Model Performance\n","\n","In practice a typical workflow when building a neural network.  Buid it -> Fit it -> Evaluate it (repeat)\n","\n","When it comes to evaluation ...visualize, visulaize, visualize\n","\n","* The data - what data are we working with? What does it look like?\n","* The model - what does our model look like?\n","* The training of the model - how doe a model perform while it learns\n","* The prediction of the model - how do the predictions of a model line up against the ground truth"],"metadata":{"id":"oaSrXGYe8bGj"}},{"cell_type":"code","source":["# Make bigger dataset\n","\n","X1_train = tf.range(-300, 300, 5)\n","X1_train = tf.expand_dims(X1_train, axis=-1)\n","y1_train = X1_train + 10\n","X1_train[:5], y1_train[:5]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3tyNm2wq-t7J","executionInfo":{"status":"ok","timestamp":1761703450767,"user_tz":300,"elapsed":28,"user":{"displayName":"Kiet Duong","userId":"01618440595764512710"}},"outputId":"050ef407-45a3-467b-a986-2e7d7a68a87c"},"execution_count":21,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(<tf.Tensor: shape=(5, 1), dtype=int32, numpy=\n"," array([[-300],\n","        [-295],\n","        [-290],\n","        [-285],\n","        [-280]], dtype=int32)>,\n"," <tf.Tensor: shape=(5, 1), dtype=int32, numpy=\n"," array([[-290],\n","        [-285],\n","        [-280],\n","        [-275],\n","        [-270]], dtype=int32)>)"]},"metadata":{},"execution_count":21}]},{"cell_type":"code","source":["X1_train.shape, y1_train.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Z-IMRtGx_JEY","executionInfo":{"status":"ok","timestamp":1761703450773,"user_tz":300,"elapsed":2,"user":{"displayName":"Kiet Duong","userId":"01618440595764512710"}},"outputId":"c974b761-6ee2-46c9-dde3-a257c50fc487"},"execution_count":22,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(TensorShape([120, 1]), TensorShape([120, 1]))"]},"metadata":{},"execution_count":22}]},{"cell_type":"code","source":["plt.scatter(X1_train, y1_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":447},"id":"sOlou_f__jJ6","executionInfo":{"status":"ok","timestamp":1761703450919,"user_tz":300,"elapsed":136,"user":{"displayName":"Kiet Duong","userId":"01618440595764512710"}},"outputId":"3286d318-3e87-4ce6-aa62-4e399cc0f245"},"execution_count":23,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.collections.PathCollection at 0x7e3645b5c320>"]},"metadata":{},"execution_count":23},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["### The 3 Sets...\n","* Training set the model learns from this data, typically 80% of the data set\n","* Validation set - the model gets tuned on this data, 10 - 15%\n","* Test set - the model gets evaluated using this data, 10 - 15%"],"metadata":{"id":"FQuflODB_uEo"}},{"cell_type":"code","source":["len(X1_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9HlTJuFWAm4_","executionInfo":{"status":"ok","timestamp":1761703450923,"user_tz":300,"elapsed":0,"user":{"displayName":"Kiet Duong","userId":"01618440595764512710"}},"outputId":"5a1e3917-324b-45ec-d3a0-3405fcd8559c"},"execution_count":24,"outputs":[{"data":{"text/plain":["120"]},"execution_count":24,"metadata":{},"output_type":"execute_result"}]},{"cell_type":"code","source":["# Split the data into training and test set\n","X1_test = X1_train[100:]\n","X1_train = X1_train[:100]\n","y1_test = y1_train[100:]\n","y1_train = y1_train[:100]\n","\n","len(X1_train), len(X1_test)\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GG5leYqJApk9","executionInfo":{"status":"ok","timestamp":1761703450953,"user_tz":300,"elapsed":0,"user":{"displayName":"Kiet Duong","userId":"01618440595764512710"}},"outputId":"7ba7cf84-dad1-4c12-a993-b98328b3277f"},"execution_count":25,"outputs":[{"data":{"text/plain":["(100, 20)"]},"execution_count":25,"metadata":{},"output_type":"execute_result"}]},{"cell_type":"code","source":["plt.figure(figsize=(10,7))\n","plt.scatter(X1_train, y1_train, c=\"b\", label=\"Training data\")\n","plt.scatter(X1_test, y1_test, c=\"g\", label=\"Testing data\")\n","plt.legend();"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":599},"id":"FDZ0n17VCdPf","executionInfo":{"status":"ok","timestamp":1761703451120,"user_tz":300,"elapsed":172,"user":{"displayName":"Kiet Duong","userId":"01618440595764512710"}},"outputId":"01b8eb36-718e-4d04-d52e-c4268eacdb45"},"execution_count":26,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x700 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# Let's have a look at how to build a neural network for our data\n","\n","# 1. Create the model\n","model2 = tf.keras.Sequential([\n","    tf.keras.layers.Dense(1)\n","])\n","\n","# 2. Compile the model\n","model2.compile(loss=tf.keras.losses.mae,\n","              optimizer=tf.keras.optimizers.SGD(),\n","              metrics=[\"mae\"])\n","\n","# 3. Fit the model\n","# model2.fit(X1_train, y1_train, epochs=100, verbose=0)"],"metadata":{"id":"Em9qSUPJDcxo","executionInfo":{"status":"ok","timestamp":1761703636291,"user_tz":300,"elapsed":8,"user":{"displayName":"Kiet Duong","userId":"01618440595764512710"}}},"execution_count":29,"outputs":[]},{"cell_type":"code","source":["model2.summary()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":161},"id":"O-v-h3H_uDgq","executionInfo":{"status":"ok","timestamp":1761703706184,"user_tz":300,"elapsed":15,"user":{"displayName":"Kiet Duong","userId":"01618440595764512710"}},"outputId":"dfd4784b-a3d9-4016-f963-c3ef600ac938"},"execution_count":31,"outputs":[{"output_type":"display_data","data":{"text/plain":["\u001b[1mModel: \"sequential_3\"\u001b[0m\n"],"text/html":["<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\">Model: \"sequential_3\"</span>\n","</pre>\n"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓\n","┃\u001b[1m \u001b[0m\u001b[1mLayer (type)                   \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1mOutput Shape          \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1m      Param #\u001b[0m\u001b[1m \u001b[0m┃\n","┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩\n","│ dense_5 (\u001b[38;5;33mDense\u001b[0m)                 │ ?                      │   \u001b[38;5;34m0\u001b[0m (unbuilt) │\n","└─────────────────────────────────┴────────────────────────┴───────────────┘\n"],"text/html":["<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓\n","┃<span style=\"font-weight: bold\"> Layer (type)                    </span>┃<span style=\"font-weight: bold\"> Output Shape           </span>┃<span style=\"font-weight: bold\">       Param # </span>┃\n","┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩\n","│ dense_5 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                 │ ?                      │   <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> (unbuilt) │\n","└─────────────────────────────────┴────────────────────────┴───────────────┘\n","</pre>\n"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["\u001b[1m Total params: \u001b[0m\u001b[38;5;34m0\u001b[0m (0.00 B)\n"],"text/html":["<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Total params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> (0.00 B)\n","</pre>\n"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["\u001b[1m Trainable params: \u001b[0m\u001b[38;5;34m0\u001b[0m (0.00 B)\n"],"text/html":["<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> (0.00 B)\n","</pre>\n"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["\u001b[1m Non-trainable params: \u001b[0m\u001b[38;5;34m0\u001b[0m (0.00 B)\n"],"text/html":["<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Non-trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> (0.00 B)\n","</pre>\n"]},"metadata":{}}]},{"cell_type":"code","source":["from os import name\n","# Let's create a model that builds automatically by defining the input_shape argument\n","\n","tf.random.set_seed(42)\n","\n","model3 = tf.keras.Sequential([\n","    tf.keras.layers.Dense(100, activation=\"relu\"),  # each one is a hidden layer, with 100 neurons\n","    tf.keras.layers.Dense(100, activation=\"relu\"),\n","    tf.keras.layers.Dense(1)\n","], name = \"model_3\" )\n","\n","model3.compile(loss=tf.keras.losses.mae,\n","              optimizer=tf.keras.optimizers.Adam(learning_rate=0.01),\n","              metrics=[\"mae\"])\n","\n","# model3.fit(X1_train, y1_train, epochs=100, verbose=0)\n","\n","model3.summary()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":225},"id":"mblclBa8ugMy","executionInfo":{"status":"ok","timestamp":1761707182067,"user_tz":300,"elapsed":22,"user":{"displayName":"Kiet Duong","userId":"01618440595764512710"}},"outputId":"7c58cd97-41bf-4a3f-bf1f-8908d612fb52"},"execution_count":101,"outputs":[{"output_type":"display_data","data":{"text/plain":["\u001b[1mModel: \"model_3\"\u001b[0m\n"],"text/html":["<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\">Model: \"model_3\"</span>\n","</pre>\n"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓\n","┃\u001b[1m \u001b[0m\u001b[1mLayer (type)                   \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1mOutput Shape          \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1m      Param #\u001b[0m\u001b[1m \u001b[0m┃\n","┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩\n","│ dense_9 (\u001b[38;5;33mDense\u001b[0m)                 │ ?                      │   \u001b[38;5;34m0\u001b[0m (unbuilt) │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ dense_10 (\u001b[38;5;33mDense\u001b[0m)                │ ?                      │   \u001b[38;5;34m0\u001b[0m (unbuilt) │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ dense_11 (\u001b[38;5;33mDense\u001b[0m)                │ ?                      │   \u001b[38;5;34m0\u001b[0m (unbuilt) │\n","└─────────────────────────────────┴────────────────────────┴───────────────┘\n"],"text/html":["<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓\n","┃<span style=\"font-weight: bold\"> Layer (type)                    </span>┃<span style=\"font-weight: bold\"> Output Shape           </span>┃<span style=\"font-weight: bold\">       Param # </span>┃\n","┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩\n","│ dense_9 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                 │ ?                      │   <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> (unbuilt) │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ dense_10 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                │ ?                      │   <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> (unbuilt) │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ dense_11 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                │ ?                      │   <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> (unbuilt) │\n","└─────────────────────────────────┴────────────────────────┴───────────────┘\n","</pre>\n"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["\u001b[1m Total params: \u001b[0m\u001b[38;5;34m0\u001b[0m (0.00 B)\n"],"text/html":["<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Total params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> (0.00 B)\n","</pre>\n"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["\u001b[1m Trainable params: \u001b[0m\u001b[38;5;34m0\u001b[0m (0.00 B)\n"],"text/html":["<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> (0.00 B)\n","</pre>\n"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["\u001b[1m Non-trainable params: \u001b[0m\u001b[38;5;34m0\u001b[0m (0.00 B)\n"],"text/html":["<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Non-trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> (0.00 B)\n","</pre>\n"]},"metadata":{}}]},{"cell_type":"markdown","source":["* Total params - total number of parameters in the model\n","* Trainable params - the parametes (patterns) the model can update as it train\n","* Non-trainable params - these parameters are not updated during training (this is typically when you bring in parameters from already learned parameters models **transfer learning**)"],"metadata":{"id":"EBWGUc0evdbb"}},{"cell_type":"code","source":["# Fit the model to training data\n","model3.fit(X1_train, y1_train, epochs=1000, verbose=0)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bNxBth-9xJqF","executionInfo":{"status":"ok","timestamp":1761707310165,"user_tz":300,"elapsed":31680,"user":{"displayName":"Kiet Duong","userId":"01618440595764512710"}},"outputId":"ca84139b-9b94-48dc-ed57-1df48472acd3"},"execution_count":107,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<keras.src.callbacks.history.History at 0x7e36413f72c0>"]},"metadata":{},"execution_count":107}]},{"cell_type":"code","source":["# Get a summary of our model\n","model3.summary()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":241},"id":"StlyS6mAxqqy","executionInfo":{"status":"ok","timestamp":1761707329449,"user_tz":300,"elapsed":18,"user":{"displayName":"Kiet Duong","userId":"01618440595764512710"}},"outputId":"9d791373-42d4-41ce-94fa-a710967aa929"},"execution_count":108,"outputs":[{"output_type":"display_data","data":{"text/plain":["\u001b[1mModel: \"model_3\"\u001b[0m\n"],"text/html":["<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\">Model: \"model_3\"</span>\n","</pre>\n"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓\n","┃\u001b[1m \u001b[0m\u001b[1mLayer (type)                   \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1mOutput Shape          \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1m      Param #\u001b[0m\u001b[1m \u001b[0m┃\n","┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩\n","│ dense_9 (\u001b[38;5;33mDense\u001b[0m)                 │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m100\u001b[0m)            │           \u001b[38;5;34m200\u001b[0m │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ dense_10 (\u001b[38;5;33mDense\u001b[0m)                │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m100\u001b[0m)            │        \u001b[38;5;34m10,100\u001b[0m │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ dense_11 (\u001b[38;5;33mDense\u001b[0m)                │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m1\u001b[0m)              │           \u001b[38;5;34m101\u001b[0m │\n","└─────────────────────────────────┴────────────────────────┴───────────────┘\n"],"text/html":["<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓\n","┃<span style=\"font-weight: bold\"> Layer (type)                    </span>┃<span style=\"font-weight: bold\"> Output Shape           </span>┃<span style=\"font-weight: bold\">       Param # </span>┃\n","┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩\n","│ dense_9 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                 │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">100</span>)            │           <span style=\"color: #00af00; text-decoration-color: #00af00\">200</span> │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ dense_10 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">100</span>)            │        <span style=\"color: #00af00; text-decoration-color: #00af00\">10,100</span> │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ dense_11 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">1</span>)              │           <span style=\"color: #00af00; text-decoration-color: #00af00\">101</span> │\n","└─────────────────────────────────┴────────────────────────┴───────────────┘\n","</pre>\n"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["\u001b[1m Total params: \u001b[0m\u001b[38;5;34m31,205\u001b[0m (121.90 KB)\n"],"text/html":["<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Total params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">31,205</span> (121.90 KB)\n","</pre>\n"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["\u001b[1m Trainable params: \u001b[0m\u001b[38;5;34m10,401\u001b[0m (40.63 KB)\n"],"text/html":["<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">10,401</span> (40.63 KB)\n","</pre>\n"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["\u001b[1m Non-trainable params: \u001b[0m\u001b[38;5;34m0\u001b[0m (0.00 B)\n"],"text/html":["<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Non-trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> (0.00 B)\n","</pre>\n"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["\u001b[1m Optimizer params: \u001b[0m\u001b[38;5;34m20,804\u001b[0m (81.27 KB)\n"],"text/html":["<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Optimizer params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">20,804</span> (81.27 KB)\n","</pre>\n"]},"metadata":{}}]},{"cell_type":"code","source":["from tensorflow.keras.utils import plot_model\n","plot_model(model=model3, show_shapes=True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":939},"id":"TSvf0oeUyGop","executionInfo":{"status":"ok","timestamp":1761707196722,"user_tz":300,"elapsed":99,"user":{"displayName":"Kiet Duong","userId":"01618440595764512710"}},"outputId":"cdbf0903-0d39-4b70-f11d-1b8395495046"},"execution_count":104,"outputs":[{"output_type":"execute_result","data":{"image/png":"\n","text/plain":["<IPython.core.display.Image object>"]},"metadata":{},"execution_count":104}]},{"cell_type":"markdown","source":["### Visulazing model's prediction\n","\n","To visulize predictions, it's a good idea to plot them agains the ground truth labels.\n","\n","Often you'll see this in the forma of y_test or y_true vs. y_pred (ground truth vs. our model's prediction"],"metadata":{"id":"6H_Xw5hMzigE"}},{"cell_type":"code","source":["X1_test[:10]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WhiqVTv332pW","executionInfo":{"status":"ok","timestamp":1761706505717,"user_tz":300,"elapsed":16,"user":{"displayName":"Kiet Duong","userId":"01618440595764512710"}},"outputId":"16436307-f474-4496-ddef-90534a76e24b"},"execution_count":97,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<tf.Tensor: shape=(10, 1), dtype=int32, numpy=\n","array([[200],\n","       [205],\n","       [210],\n","       [215],\n","       [220],\n","       [225],\n","       [230],\n","       [235],\n","       [240],\n","       [245]], dtype=int32)>"]},"metadata":{},"execution_count":97}]},{"cell_type":"code","source":["y_pred = model3.predict(X1_test)\n","y_pred"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dlQ5QEm40gZs","executionInfo":{"status":"ok","timestamp":1761708341820,"user_tz":300,"elapsed":63,"user":{"displayName":"Kiet Duong","userId":"01618440595764512710"}},"outputId":"7b28173f-b9a1-42bb-8e03-ba215966485a"},"execution_count":124,"outputs":[{"output_type":"stream","name":"stdout","text":["\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 31ms/step\n"]},{"output_type":"execute_result","data":{"text/plain":["array([[207.55621],\n","       [212.49838],\n","       [217.44058],\n","       [222.38277],\n","       [227.32495],\n","       [232.26717],\n","       [237.20938],\n","       [242.15157],\n","       [247.09378],\n","       [252.03592],\n","       [256.9781 ],\n","       [261.9203 ],\n","       [266.86273],\n","       [271.8056 ],\n","       [276.74918],\n","       [281.69272],\n","       [286.6363 ],\n","       [291.57962],\n","       [296.5229 ],\n","       [301.46616]], dtype=float32)"]},"metadata":{},"execution_count":124}]},{"cell_type":"code","source":["# Let's create a plotting function\n","def plot_predictions(train_data=X1_train,\n","                     train_labels=y1_train,\n","                     test_data=X1_test,\n","                     test_labels=y1_test,\n","                     predictions=y_pred):\n","    \"\"\"\n","    Plots training data, test data and compares predictions.\n","    \"\"\"\n","    plt.figure(figsize=(10, 7))\n","    plt.scatter(train_data, train_labels, c=\"b\", label=\"Training data\")\n","    plt.scatter(test_data, test_labels, c=\"g\", label=\"Testing data\")\n","    plt.scatter(test_data, predictions, c=\"r\", label=\"Predictions\")\n","    plt.legend();"],"metadata":{"id":"8bzEHSuf0xl3","executionInfo":{"status":"ok","timestamp":1761706512794,"user_tz":300,"elapsed":15,"user":{"displayName":"Kiet Duong","userId":"01618440595764512710"}}},"execution_count":99,"outputs":[]},{"cell_type":"code","source":["plot_predictions(X1_train,\n","                 y1_train,\n","                 X1_test,\n","                 y1_test,\n","                 y_pred)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":599},"id":"PONmnsRx1v34","executionInfo":{"status":"ok","timestamp":1761708353484,"user_tz":300,"elapsed":187,"user":{"displayName":"Kiet Duong","userId":"01618440595764512710"}},"outputId":"41f2f56e-a4f1-4737-cac9-59dc32a3343e"},"execution_count":125,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x700 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["### Evaluating our model's predictions with regression evaluation metrics\n","\n","Depending on the problem you're working on, there will be different evaluation metrics to evaluate you model's preformance.\n","\n","Since we are working on a regression, two types of metrics are available:\n","* MAE - mean absolute error, \"on average, how wrong is each of my model's predictions\"\n","* MSE - mean square error, \"square the average errors\""],"metadata":{"id":"hdUPFSmG8TQd"}},{"cell_type":"code","source":["# Evaluate the model on the test set.\n","model3.evaluate(X1_test, y1_test)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Lug2wi4I947y","executionInfo":{"status":"ok","timestamp":1761708650948,"user_tz":300,"elapsed":61,"user":{"displayName":"Kiet Duong","userId":"01618440595764512710"}},"outputId":"a8f5711d-fdf5-4fe4-e21c-b6e50b448671"},"execution_count":131,"outputs":[{"output_type":"stream","name":"stdout","text":["\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 27ms/step - loss: 2.9913 - mae: 2.9913\n"]},{"output_type":"execute_result","data":{"text/plain":["[2.991286516189575, 2.991286516189575]"]},"metadata":{},"execution_count":131}]},{"cell_type":"code","source":["y_pred.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"voDDRNMhBAxN","executionInfo":{"status":"ok","timestamp":1761708652575,"user_tz":300,"elapsed":8,"user":{"displayName":"Kiet Duong","userId":"01618440595764512710"}},"outputId":"af024ed8-a705-4c1e-cf07-a7dc40dbd293"},"execution_count":132,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(20, 1)"]},"metadata":{},"execution_count":132}]},{"cell_type":"code","source":["tf.squeeze(y_pred)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Pi4rwQ6lAlr3","executionInfo":{"status":"ok","timestamp":1761708656511,"user_tz":300,"elapsed":43,"user":{"displayName":"Kiet Duong","userId":"01618440595764512710"}},"outputId":"0a1a73c0-63b9-41d9-ee60-f29ff2abe7b6"},"execution_count":134,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<tf.Tensor: shape=(20,), dtype=float32, numpy=\n","array([207.55621, 212.49838, 217.44058, 222.38277, 227.32495, 232.26717,\n","       237.20938, 242.15157, 247.09378, 252.03592, 256.9781 , 261.9203 ,\n","       266.86273, 271.8056 , 276.74918, 281.69272, 286.6363 , 291.57962,\n","       296.5229 , 301.46616], dtype=float32)>"]},"metadata":{},"execution_count":134}]},{"cell_type":"code","source":["# Calculate the mean absolute error\n","mae = tf.keras.metrics.mae(y_true=y1_test, y_pred=y_pred)\n","mae\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qia78Qwo-RbQ","executionInfo":{"status":"ok","timestamp":1761709061780,"user_tz":300,"elapsed":47,"user":{"displayName":"Kiet Duong","userId":"01618440595764512710"}},"outputId":"d2eabd85-f829-4d04-d14f-668c7d31866a"},"execution_count":144,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<tf.Tensor: shape=(20,), dtype=float32, numpy=\n","array([2.4437866, 2.5016174, 2.5594177, 2.6172333, 2.6750488, 2.7328339,\n","       2.790619 , 2.8484344, 2.9062195, 2.9640808, 3.0219116, 3.079712 ,\n","       3.137268 , 3.194397 , 3.250824 , 3.3072815, 3.3637085, 3.4203796,\n","       3.4771118, 3.533844 ], dtype=float32)>"]},"metadata":{},"execution_count":144}]},{"cell_type":"code","source":["# Make some functions to calculate MAE & MSE\n","\n","def mae(y_true, y_pred):\n","    return tf.metrics.mean_absolute_error(y_true, y_pred)\n","\n","def mse(y_true, y_pred):\n","    return tf.metrics.mean_squared_error(y_true, y_pred)"],"metadata":{"id":"eHUnFiO8CUWn","executionInfo":{"status":"ok","timestamp":1761708989612,"user_tz":300,"elapsed":41,"user":{"displayName":"Kiet Duong","userId":"01618440595764512710"}}},"execution_count":135,"outputs":[]},{"cell_type":"markdown","source":["### Running experiments to improve our model\n","\n","Build a model -> Fit it -> Evaluate it -> Tweak It -> Repeat\n","\n","1. Get more data - more examples for your model to train on (more opportunities to learn patterns or relationships between features and labels.\n","2. Make the model larger (using more complex models) - this may come in the form of more layers or more hidden units in each layer\n","3. Train for longer - give your model more chance to finde the patters in the data"],"metadata":{"id":"BOLIw3GkCxbo"}},{"cell_type":"code","source":["X1_train, y1_train"],"metadata":{"id":"3GbfDD3aDpgH","executionInfo":{"status":"ok","timestamp":1761709309187,"user_tz":300,"elapsed":16,"user":{"displayName":"Kiet Duong","userId":"01618440595764512710"}},"outputId":"c43a5ae0-3269-4b3e-ac2e-b79ad8be47b0","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":145,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(<tf.Tensor: shape=(100, 1), dtype=int32, numpy=\n"," array([[-300],\n","        [-295],\n","        [-290],\n","        [-285],\n","        [-280],\n","        [-275],\n","        [-270],\n","        [-265],\n","        [-260],\n","        [-255],\n","        [-250],\n","        [-245],\n","        [-240],\n","        [-235],\n","        [-230],\n","        [-225],\n","        [-220],\n","        [-215],\n","        [-210],\n","        [-205],\n","        [-200],\n","        [-195],\n","        [-190],\n","        [-185],\n","        [-180],\n","        [-175],\n","        [-170],\n","        [-165],\n","        [-160],\n","        [-155],\n","        [-150],\n","        [-145],\n","        [-140],\n","        [-135],\n","        [-130],\n","        [-125],\n","        [-120],\n","        [-115],\n","        [-110],\n","        [-105],\n","        [-100],\n","        [ -95],\n","        [ -90],\n","        [ -85],\n","        [ -80],\n","        [ -75],\n","        [ -70],\n","        [ -65],\n","        [ -60],\n","        [ -55],\n","        [ -50],\n","        [ -45],\n","        [ -40],\n","        [ -35],\n","        [ -30],\n","        [ -25],\n","        [ -20],\n","        [ -15],\n","        [ -10],\n","        [  -5],\n","        [   0],\n","        [   5],\n","        [  10],\n","        [  15],\n","        [  20],\n","        [  25],\n","        [  30],\n","        [  35],\n","        [  40],\n","        [  45],\n","        [  50],\n","        [  55],\n","        [  60],\n","        [  65],\n","        [  70],\n","        [  75],\n","        [  80],\n","        [  85],\n","        [  90],\n","        [  95],\n","        [ 100],\n","        [ 105],\n","        [ 110],\n","        [ 115],\n","        [ 120],\n","        [ 125],\n","        [ 130],\n","        [ 135],\n","        [ 140],\n","        [ 145],\n","        [ 150],\n","        [ 155],\n","        [ 160],\n","        [ 165],\n","        [ 170],\n","        [ 175],\n","        [ 180],\n","        [ 185],\n","        [ 190],\n","        [ 195]], dtype=int32)>,\n"," <tf.Tensor: shape=(100, 1), dtype=int32, numpy=\n"," array([[-290],\n","        [-285],\n","        [-280],\n","        [-275],\n","        [-270],\n","        [-265],\n","        [-260],\n","        [-255],\n","        [-250],\n","        [-245],\n","        [-240],\n","        [-235],\n","        [-230],\n","        [-225],\n","        [-220],\n","        [-215],\n","        [-210],\n","        [-205],\n","        [-200],\n","        [-195],\n","        [-190],\n","        [-185],\n","        [-180],\n","        [-175],\n","        [-170],\n","        [-165],\n","        [-160],\n","        [-155],\n","        [-150],\n","        [-145],\n","        [-140],\n","        [-135],\n","        [-130],\n","        [-125],\n","        [-120],\n","        [-115],\n","        [-110],\n","        [-105],\n","        [-100],\n","        [ -95],\n","        [ -90],\n","        [ -85],\n","        [ -80],\n","        [ -75],\n","        [ -70],\n","        [ -65],\n","        [ -60],\n","        [ -55],\n","        [ -50],\n","        [ -45],\n","        [ -40],\n","        [ -35],\n","        [ -30],\n","        [ -25],\n","        [ -20],\n","        [ -15],\n","        [ -10],\n","        [  -5],\n","        [   0],\n","        [   5],\n","        [  10],\n","        [  15],\n","        [  20],\n","        [  25],\n","        [  30],\n","        [  35],\n","        [  40],\n","        [  45],\n","        [  50],\n","        [  55],\n","        [  60],\n","        [  65],\n","        [  70],\n","        [  75],\n","        [  80],\n","        [  85],\n","        [  90],\n","        [  95],\n","        [ 100],\n","        [ 105],\n","        [ 110],\n","        [ 115],\n","        [ 120],\n","        [ 125],\n","        [ 130],\n","        [ 135],\n","        [ 140],\n","        [ 145],\n","        [ 150],\n","        [ 155],\n","        [ 160],\n","        [ 165],\n","        [ 170],\n","        [ 175],\n","        [ 180],\n","        [ 185],\n","        [ 190],\n","        [ 195],\n","        [ 200],\n","        [ 205]], dtype=int32)>)"]},"metadata":{},"execution_count":145}]}]}